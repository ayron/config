" Ayron's vimrc.
" You're welcome.

" Vundle
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#begin()

Plugin 'gmarik/vundle'
Plugin 'tmhedberg/SimpylFold'
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'sjl/badwolf'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'JuliaEditorSupport/julia-vim'
" Bundle 'scrooloose/nerdtree'

call vundle#end()
filetype plugin indent on

colorscheme badwolf     " awesome colorscheme (find on github)

let python_highlight_all=1
syntax on
syntax enable           " enable syntax processing

au BufNewFile,BufRead *.py set
    \ tabstop=4
    \ softtabstop=4
    \ shiftwidth=4
    \ textwidth=79
    \ expandtab
    \ autoindent
    \ fileformat=unix

au BufNewFile,BufRead *.jl set
    \ tabstop=4
    \ softtabstop=4
    \ shiftwidth=4
    \ textwidth=79
    \ expandtab
    \ autoindent
    \ fileformat=unix

" Powerline setup
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 9
set laststatus=2

" UI
set number              " show line numbers
set showcmd             " show command in bottom bar
set cursorline          " highlight current line
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.
set showmatch           " highlight matching [{()}]
set ruler               " show cursor position
set textwidth=79
set clipboard=unnamed

" Show bad whitespace
"au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

set encoding=utf-8

" Searching
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set ignorecase          " ignore case in searches
set smartcase           " override ingorecase if search contains an uppercase
nnoremap # <nop>        " I hate this

" Folding
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max
nnoremap <space> za     " space open/close folds
set foldmethod=indent   " fild based on indent level

" Movement
"nnoremap j gj           " move vertically by wrapped lines
"nnoremap k gk           "
nnoremap B ^		" move to beginnning of line
nnoremap E $            " move to end of line
"nnoremap $ <nop>        
"nnoremap ^ <nop>
nnoremap gV `[v`]       " highlight last inserted text
"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Autocomplete
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF


" Leader
let mapleader=","       " leader is comma
inoremap kk <esc>

set mouse=a             " Enable use of mouse
set modeline            " Those vim lines at the start or end of files

set wrap! go+=b sidescroll=1  " Enable side scrolling
set scrolloff=999             " Keep cursor centered
set sidescrolloff=999         "

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" Define some formats
au BufNewFile,BufRead *.ino set filetype=cpp
au BufNewFile,BufRead *.pde set filetype=cpp
au BufNewFile,BufRead *.cls set filetype=tex
au BufNewFile,BufRead *.launch set filetype=xml
au BufNewFile,BufRead *.md set filetype=markdown

let g:tex_flavor='latex'
set shellslash
set grepprg=grep\ -nH\ $*


nnoremap <buffer> <F9> :exec '!python' shellescape(@%, 1)<cr>

